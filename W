-- // Services & Setup
local UILib = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/UI-Libs/main/Vape.txt"))()

local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")
local StarterGui = game:GetService("StarterGui") 
local NetworkClient = game:GetService("NetworkClient")
local VirtualUser = game:GetService("VirtualUser")
local TeleportService = game:GetService("TeleportService")
local HTTPService = game:GetService("HttpService")
local StatsService = game:GetService("Stats")

local player = Players.LocalPlayer
local camera = Workspace.CurrentCamera

-- // Your giant function code stays here (auto farm, Brew, tp kill, reach, etc.)
-- I did not delete or modify your logic, just UI.
-- Keep all functions like changeSword, Brew:doReach, autoCollectOrbsLoop, enableFreeCam, etc.

-- ###########################################################
-- ###################### UI SYSTEM ##########################
-- ###########################################################

local MainUI = UILib:CreateWindow({
    Name = "Elerium Hub",
    Theme = "Dark"
})

------------------------------------------------------
-- üìù Notes Tab
------------------------------------------------------
local NotesTab = MainUI:CreateTab("üìù Notes")
NotesTab:CreateParagraph({
    Title = "Elerium Hub",
    Content = "Welcome! Use the tabs to manage features. \n‚öîÔ∏è Sword Mod | üßç Player Mod | üåæ Auto Farm | üé® Visuals | üèÉ Movement"
})

------------------------------------------------------
-- ‚öîÔ∏è Sword Modification Tab
------------------------------------------------------
local SwordTab = MainUI:CreateTab("‚öîÔ∏è Sword Mod")

SwordTab:CreateInput({
    Name = "Change Sword Name",
    PlaceholderText = "Enter sword name...",
    RemoveTextAfterFocusLost = true,
    Callback = function(value) changeSword(value) end
})

SwordTab:CreateToggle({
    Name = "Sword Reach",
    CurrentValue = settings.swordReachEnabled,
    Callback = function(state)
        settings.swordReachEnabled = state
        if state then Brew:doReach() else Brew:undoReach() end
    end
})

SwordTab:CreateSlider({
    Name = "Reach Size",
    Range = {4, 100},
    CurrentValue = settings.swordReachSize,
    Callback = function(val) settings.swordReachSize = val end
})

SwordTab:CreateToggle({
    Name = "Damage Amplifier",
    CurrentValue = settings.damageAmplifierEnabled,
    Callback = function(state) settings.damageAmplifierEnabled = state end
})

SwordTab:CreateToggle({
    Name = "Instant Hit",
    CurrentValue = settings.instantHitEnabled,
    Callback = function(state) settings.instantHitEnabled = state end
})

SwordTab:CreateToggle({
    Name = "Auto Hit",
    CurrentValue = settings.autoHitEnabled,
    Callback = function(state) settings.autoHitEnabled = state end
})

SwordTab:CreateToggle({
    Name = "Prediction",
    CurrentValue = settings.predictionEnabled,
    Callback = function(state) settings.predictionEnabled = state end
})

SwordTab:CreateToggle({
    Name = "Circle Strafe Kill",
    CurrentValue = settings.circleStrafeKillEnabled,
    Callback = function(state) settings.circleStrafeKillEnabled = state end
})

SwordTab:CreateSlider({
    Name = "Circle Strafe Speed",
    Range = {10, 100},
    CurrentValue = settings.circleStrafeSpeed,
    Callback = function(val) settings.circleStrafeSpeed = val end
})

SwordTab:CreateSlider({
    Name = "Circle Strafe Range",
    Range = {5, 50},
    CurrentValue = settings.circleStrafeRange,
    Callback = function(val) settings.circleStrafeRange = val end
})

SwordTab:CreateToggle({
    Name = "TP Kill",
    CurrentValue = settings.tpKillEnabled,
    Callback = function(state) settings.tpKillEnabled = state end
})

SwordTab:CreateSlider({
    Name = "TP Kill Range",
    Range = {5, 100},
    CurrentValue = settings.tpKillRange,
    Callback = function(val) settings.tpKillRange = val end
})

SwordTab:CreateToggle({
    Name = "Underground TP Kill",
    CurrentValue = settings.undergroundTPKillEnabled,
    Callback = function(state) settings.undergroundTPKillEnabled = state end
})

SwordTab:CreateSlider({
    Name = "Underground TP Kill Range",
    Range = {5, 100},
    CurrentValue = settings.undergroundTPKillRange,
    Callback = function(val) settings.undergroundTPKillRange = val end
})

------------------------------------------------------
-- üßç Player Modification Tab
------------------------------------------------------
local PlayerTab = MainUI:CreateTab("üßç Player Mod")

PlayerTab:CreateSlider({
    Name = "Walkspeed",
    Range = {16, 200},
    CurrentValue = settings.cframeSpeed,
    Callback = function(val) settings.cframeSpeed = val end
})

PlayerTab:CreateSlider({
    Name = "Jump Power",
    Range = {50, 200},
    CurrentValue = settings.jumpPowerValue or 50,
    Callback = function(val) settings.jumpPowerValue = val end
})

PlayerTab:CreateSlider({
    Name = "Hip Height",
    Range = {0, 50},
    CurrentValue = settings.hipHeightValue,
    Callback = function(val)
        settings.hipHeightValue = val
        setHipHeight(val)
    end
})

PlayerTab:CreateToggle({
    Name = "Tank Mode",
    CurrentValue = settings.tankEnabled,
    Callback = function(state) settings.tankEnabled = state end
})

PlayerTab:CreateToggle({
    Name = "Killstreak",
    CurrentValue = settings.killstreakEnabled,
    Callback = function(state) settings.killstreakEnabled = state end
})

PlayerTab:CreateToggle({
    Name = "Lock-On",
    CurrentValue = settings.lockOnEnabled,
    Callback = function(state) settings.lockOnEnabled = state end
})

PlayerTab:CreateToggle({
    Name = "Freeze Mode",
    CurrentValue = settings.freezeModeEnabled,
    Callback = function(state) settings.freezeModeEnabled = state end
})

PlayerTab:CreateToggle({
    Name = "Lay Down",
    CurrentValue = settings.layDownEnabled,
    Callback = function(state) settings.layDownEnabled = state end
})

------------------------------------------------------
-- üåæ Auto Farm Tab
------------------------------------------------------
local FarmTab = MainUI:CreateTab("üåæ Auto Farm")

FarmTab:CreateToggle({
    Name = "Auto Farm Orbs",
    CurrentValue = settings.farmingOrbsEnabled,
    Callback = function(state)
        settings.farmingOrbsEnabled = state
        autoCollectOrbsActive = state
        if state then task.spawn(autoCollectOrbsLoop) end
    end
})

FarmTab:CreateToggle({
    Name = "Auto Farm Lucky Blocks",
    CurrentValue = settings.farmingLuckyBlocksEnabled,
    Callback = function(state)
        settings.farmingLuckyBlocksEnabled = state
        autoCollectLuckyBlocksActive = state
        if state then task.spawn(autoCollectLuckyBlocksLoop) end
    end
})

FarmTab:CreateToggle({
    Name = "Auto Farm Zones",
    CurrentValue = settings.farmingTimeZonesEnabled,
    Callback = function(state)
        settings.farmingTimeZonesEnabled = state
        autoCollectZonesActive = state
        if state then task.spawn(autoCollectZonesLoop) end
    end
})

FarmTab:CreateToggle({
    Name = "Auto Farm KOTH",
    CurrentValue = settings.autoFarmKOTHEnabled,
    Callback = function(state)
        settings.autoFarmKOTHEnabled = state
        autoCollectKOTHActive = state
        if state then task.spawn(autoCollectKOTHLoop) end
    end
})

FarmTab:CreateToggle({
    Name = "Increase Orb Hitbox",
    CurrentValue = settings.increaseOrbHitboxEnabled,
    Callback = function(state)
        settings.increaseOrbHitboxEnabled = state
        increaseOrbHitbox(state)
    end
})

------------------------------------------------------
-- üé® Visuals Tab
------------------------------------------------------
local VisualsTab = MainUI:CreateTab("üé® Visuals")

VisualsTab:CreateToggle({
    Name = "Selection Box",
    CurrentValue = Brew.selBox,
    Callback = function(state)
        if state then Brew:doSelBox() else Brew:undoSelBox() end
    end
})

VisualsTab:CreateDropdown({
    Name = "Reach Type",
    Options = {"Box", "Sphere"},
    CurrentOption = Brew.reachType,
    Callback = function(opt) Brew.reachType = opt end
})

VisualsTab:CreateSlider({
    Name = "FreeCam Sensitivity",
    Range = {0.1, 1},
    CurrentValue = freeCamSens,
    Callback = function(val) freeCamSens = val end
})

VisualsTab:CreateSlider({
    Name = "FreeCam Speed",
    Range = {1, 20},
    CurrentValue = freeCamSpeed,
    Callback = function(val) freeCamSpeed = val end
})

------------------------------------------------------
-- üèÉ Movement Tab
------------------------------------------------------
local MovementTab = MainUI:CreateTab("üèÉ Movement")

MovementTab:CreateToggle({
    Name = "FreeCam",
    CurrentValue = settings.freeCamEnabled,
    Callback = function(state)
        settings.freeCamEnabled = state
        if state then enableFreeCam() else disableFreeCam() end
    end
})

MovementTab:CreateToggle({
    Name = "Carpet Fly",
    CurrentValue = settings.carpetEnabled,
    Callback = function(state)
        settings.carpetEnabled = state
        if state then enableCarpet() else disableCarpet() end
    end
})

MovementTab:CreateToggle({
    Name = "CFrame Walkspeed",
    CurrentValue = settings.cframeWalkspeedEnabled,
    Callback = function(state) settings.cframeWalkspeedEnabled = state end
})

MovementTab:CreateSlider({
    Name = "CFrame Speed",
    Range = {0, 200},
    CurrentValue = settings.cframeSpeed,
    Callback = function(val) settings.cframeSpeed = val end
})

MovementTab:CreateToggle({
    Name = "Spin",
    CurrentValue = settings.spinEnabled,
    Callback = function(state) settings.spinEnabled = state end
})

MovementTab:CreateSlider({
    Name = "Spin Speed",
    Range = {1, 100},
    CurrentValue = settings.spinSpeed,
    Callback = function(val) settings.spinSpeed = val end
})

MovementTab:CreateToggle({
    Name = "TP Walk",
    CurrentValue = settings.tpWalkEnabled,
    Callback = function(state) settings.tpWalkEnabled = state end
})

MovementTab:CreateSlider({
    Name = "TP Walk Speed",
    Range = {0.05, 1},
    CurrentValue = tpWalkSpeed,
    Callback = function(val) tpWalkSpeed = val end
})
